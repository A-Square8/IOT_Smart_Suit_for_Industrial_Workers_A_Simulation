Smart Suit for Industrial Workers - Simulation Setup Instructions
Software Requirements
Visual Studio Code - Lightweight code editor for writing and running the code

MinGW-w64 - GCC compiler for Windows that produces native executables

C/C++ Extension for VS Code - Provides debugging and IntelliSense support

Installation Steps
1. Install MinGW-w64
Download the MinGW-w64 installer from https://sourceforge.net/projects/mingw-w64/

During installation, select:

Architecture: x86_64

Threads: posix

Exception: seh

Add MinGW's bin directory to your system PATH:

Right-click on "This PC" or "My Computer" → Properties → Advanced system settings → Environment Variables

Edit the "Path" variable and add the path to MinGW's bin folder (typically C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin)

2. Install Visual Studio Code
Download and install VS Code from https://code.visualstudio.com/

Open VS Code and install the C/C++ extension by Microsoft (search for "C++" in the Extensions view)

Project Setup
Create a project folder for your Smart Suit simulation

Save all the provided C source files and header files in this folder:

environment.c

sensor.c

control.c

actuator.c

temperature_sensor.h

optical_sensor.h

electrical_sensor.h

magnetic_sensor.h

acoustic_sensor.h

radiation_sensor.h

chemical_sensor.h

oxygen_sensor.h

Compilation Instructions
Open a command prompt in your project folder

Compile each module using GCC:

text
gcc -o sensor.exe sensor.c -lws2_32 -lm
gcc -o control.exe control.c -lws2_32
gcc -o actuator.exe actuator.c -lws2_32
gcc -o environment.exe environment.c -lws2_32
Running the Simulation
Open four separate command prompt windows

Navigate to your project folder in each window

Run the modules in this specific order:

First window: actuator.exe

Second window: control.exe

Third window: sensor.exe

Fourth window: environment.exe

Alternative: Running in VS Code
Open your project folder in VS Code

Open the Terminal in VS Code (Terminal → New Terminal)

Compile the files as described above

Create multiple terminal instances by clicking the "+" icon in the terminal panel

Run each executable in a separate terminal in the order specified above

Troubleshooting
If you encounter "command not found" errors, ensure MinGW is properly added to your PATH

If you get socket errors, check that no other applications are using ports 8080, 8081, or 8082

If a module crashes, restart all modules in the correct order

System Requirements
Windows 10/11

At least 4GB RAM

1GB free disk space
